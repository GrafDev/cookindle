import { Application, Assets, Sprite, Graphics, Texture } from 'pixi.js';
import { CONFIG } from './config.js';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
const isDev = import.meta.env.DEV;

// –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º dev —Ä–µ–∂–∏–º –≤ HTML
if (isDev) {
    document.body.classList.add('dev-mode');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PixiJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    const canvas = document.getElementById('game-canvas');
    const gameArea = document.querySelector('.game-area');
    
    // –°–æ–∑–¥–∞–µ–º PixiJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const app = new Application();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    await app.init({
        canvas: canvas,
        width: gameArea.clientWidth,
        height: gameArea.clientHeight,
        backgroundColor: CONFIG.pixi.backgroundColor,
        resizeTo: gameArea
    });
    
    // Dev –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if (isDev) {
        console.log('üéÆ Cookindle App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        console.log('üìê –†–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏:', gameArea.clientWidth, 'x', gameArea.clientHeight);
        console.log('üñ•Ô∏è PixiJS –≤–µ—Ä—Å–∏—è:', app.renderer.type);
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', () => {
        if (isDev) {
            console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞:', gameArea.clientWidth, 'x', gameArea.clientHeight);
        }
    });
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (isDev) {
        window.app = app;
    }
    
    // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    await initGame(app);
    
    return app;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
async function initGame(app) {
    try {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        await loadAssets();
        
        // –°–æ–∑–¥–∞–µ–º –ø–µ—á–µ–Ω—å–µ
        createCookie(app);
        
        if (isDev) {
            console.log('üç™ –ü–µ—á–µ–Ω—å–µ —Å–æ–∑–¥–∞–Ω–æ');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
async function loadAssets() {
    try {
        // –°–ø–æ—Å–æ–± 1: –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ–±—Ö–æ–¥–∏–º –±–∞–≥ PixiJS Assets)
        const cookieImageUrl = (await import('./assets/textures/bg_cooke.png')).default;
        
        if (isDev) {
            console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é');
            console.log('üìÅ URL —Ç–µ–∫—Å—Ç—É—Ä—ã:', cookieImageUrl);
        }
        
        if (cookieImageUrl) {
            // –°–æ–∑–¥–∞–µ–º Image —ç–ª–µ–º–µ–Ω—Ç
            const img = new Image();
            
            // –ü—Ä–æ–º–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const imageLoaded = new Promise((resolve, reject) => {
                img.onload = () => resolve(img);
                img.onerror = reject;
            });
            
            img.src = cookieImageUrl;
            await imageLoaded;
            
            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const texture = Texture.from(img);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–µ—à
            Assets.cache.set('cookie', texture);
            
            if (isDev) {
                console.log('‚úÖ –¢–µ–∫—Å—Ç—É—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞');
                console.log('üñºÔ∏è –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç—É—Ä—ã:', texture.width, 'x', texture.height);
            }
            return;
        }
        
        throw new Error('Import –≤–µ—Ä–Ω—É–ª undefined');
        
    } catch (error) {
        console.error('‚ùå –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞:', error);
        
        // –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ public –ø–∞–ø–∫—É
        try {
            const publicUrl = '/assets/textures/bg_cooke.png';
            
            if (isDev) {
                console.log('üîç –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ public –ø–∞–ø–∫–∏ –Ω–∞–ø—Ä—è–º—É—é');
                console.log('üìÅ URL –∏–∑ public:', publicUrl);
            }
            
            // –°–æ–∑–¥–∞–µ–º Image —ç–ª–µ–º–µ–Ω—Ç
            const img = new Image();
            
            // –ü—Ä–æ–º–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const imageLoaded = new Promise((resolve, reject) => {
                img.onload = () => resolve(img);
                img.onerror = reject;
            });
            
            img.src = publicUrl;
            await imageLoaded;
            
            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const texture = Texture.from(img);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–µ—à
            Assets.cache.set('cookie', texture);
            
            if (isDev) {
                console.log('‚úÖ –¢–µ–∫—Å—Ç—É—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ public –ø–∞–ø–∫–∏');
                console.log('üñºÔ∏è –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç—É—Ä—ã:', texture.width, 'x', texture.height);
            }
            return;
            
        } catch (publicError) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ public:', publicError);
            
            // –°–ø–æ—Å–æ–± 3: Fallback - –ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞
            if (isDev) {
                console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—É—é —Ç–µ–∫—Å—Ç—É—Ä—É');
            }
            createPixiTexture();
        }
    }
}


// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç—É—Ä—ã —á–µ—Ä–µ–∑ PixiJS Graphics
function createPixiTexture() {
    if (isDev) {
        console.log('üî∂ –°–æ–∑–¥–∞–µ–º PixiJS —Ç–µ–∫—Å—Ç—É—Ä—É –ø–µ—á–µ–Ω—å—è');
    }
    
    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç
    const graphics = new Graphics();
    
    // –†–∏—Å—É–µ–º –æ—Å–Ω–æ–≤—É –ø–µ—á–µ–Ω—å—è (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å PixiJS v8)
    graphics.circle(200, 200, 180);
    graphics.fill(0xD2691E); // –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ü–≤–µ—Ç
    
    // –î–æ–±–∞–≤–ª—è–µ–º —à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫—Ä–æ—à–∫–∏
    for (let i = 0; i < 15; i++) {
        const angle = (i / 15) * Math.PI * 2;
        const radius = 60 + Math.random() * 80;
        const x = 200 + Math.cos(angle) * radius + (Math.random() - 0.5) * 40;
        const y = 200 + Math.sin(angle) * radius + (Math.random() - 0.5) * 40;
        const size = 8 + Math.random() * 12;
        
        graphics.circle(x, y, size);
        graphics.fill(0x3C1810); // –¢–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É –∏–∑ –≥—Ä–∞—Ñ–∏–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const app = window.app; // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const texture = app.renderer.generateTexture(graphics);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–µ—à Assets
    Assets.cache.set('cookie', texture);
    
    if (isDev) {
        console.log('‚úÖ PixiJS —Ç–µ–∫—Å—Ç—É—Ä–∞ –ø–µ—á–µ–Ω—å—è —Å–æ–∑–¥–∞–Ω–∞');
        console.log('üñºÔ∏è –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç—É—Ä—ã: 400x400px');
    }
}

// –°–æ–∑–¥–∞–µ–º –ø–µ—á–µ–Ω—å–µ
function createCookie(app) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    const gameArea = document.querySelector('.game-area');
    const gameWidth = gameArea.clientWidth;
    const gameHeight = gameArea.clientHeight;
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –ø–µ—á–µ–Ω—å—è (70% –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã)
    const minSize = Math.min(gameWidth, gameHeight);
    const cookieSize = minSize * 0.7;
    
    // –°–æ–∑–¥–∞–µ–º —Å–ø—Ä–∞–π—Ç —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π
    const cookieTexture = Assets.get('cookie');
    const cookieSprite = new Sprite(cookieTexture);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏ –ø–æ–∑–∏—Ü–∏—é
    cookieSprite.width = cookieSize;
    cookieSprite.height = cookieSize;
    cookieSprite.anchor.set(0.5); // –¶–µ–Ω—Ç—Ä —Å–ø—Ä–∞–π—Ç–∞
    cookieSprite.x = gameWidth / 2;
    cookieSprite.y = gameHeight / 2;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ü–µ–Ω—É
    app.stage.addChild(cookieSprite);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (isDev) {
        window.cookie = cookieSprite;
        console.log('üç™ –†–∞–∑–º–µ—Ä –ø–µ—á–µ–Ω—å—è:', cookieSize);
        console.log('üìç –ü–æ–∑–∏—Ü–∏—è:', cookieSprite.x, cookieSprite.y);
    }
    
    return cookieSprite;
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
initApp().catch(console.error);